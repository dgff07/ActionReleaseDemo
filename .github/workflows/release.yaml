name: "release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  define_version:
    runs-on: ubuntu-latest
    name: Define version
    outputs:
      tag_version: ${{ steps.define_version.outputs.tag_version }}
    steps:
      - name: Checkout api-gateway repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Define version
        id: define_version
        run: |
          exist_tag=$(git tag)
          last_tag=""

          if [[ -n "$exist_tag" ]]; then
              last_tag=$(git describe --abbrev=0 --tags)
          fi

          major=0
          minor=0
          patch=0

          echo "========LAST tag========"
          echo "$last_tag"

          if [[ $last_tag =~ ^[0-9]+.[0-9]+.[0-9]+$ ]]; then
              IFS='.' read -ra ELEM <<< "$last_tag"
              major=${ELEM[0]}
              minor=${ELEM[1]}
              patch=${ELEM[2]}
          fi

          last_commit=$(git log -1 --pretty=%B)
          echo "========LAST commit========"
          echo "$last_commit"

          version_upgraded=1

          case $last_commit in

              "breaking change:"*)
                  echo "Creating major release"
                  major="$((major+1))"
                  minor="0"
                  patch="0"
                  ;;

              "feat:"*)
                  echo "Creating minor release"
                  minor="$((minor+1))"
                  patch="0"
                  ;;

              "fix:"*)
                  echo "Creating patch release"
                  patch="$((patch+1))"
                  ;;

              *)
                  echo "Without version upgrade"
                  version_upgraded=0
                  ;;
          esac

          export tag_version="na"
          if [[ $version_upgraded == 1 ]]; then 
              tag_version="$major.$minor.$patch"
              echo "::set-output name=tag_version::$tag_version"
          fi

  create_release:
    needs: define_version
    runs-on: ubuntu-latest
    name: Create tag and release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{needs.define_version.outputs.tag_version}}"
          release_name: "${{needs.define_version.outputs.tag_version}}"
          body: |
            test
          draft: false
          prerelease: false

  # create_tag:
  #   needs: define_version
  #   runs-on: ubuntu-latest
  #   name: Create tag
  #   steps:
  #     - name: Checkout api-gateway repository
  #       uses: actions/checkout@v2

  #     - name: Create tag
  #       run: |
  #         tag_version="${{needs.define_version.outputs.tag_version}}"
          
  #         if [[ "$tag_version" == "na" ]]; then
  #           echo "The tag will not be created"
  #           exit 0
  #         fi

  #         git tag "$tag_version"
  #         git push --tags
          

          

